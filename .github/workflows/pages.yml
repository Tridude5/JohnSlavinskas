# .github/workflows/pages.yml
name: Deploy static Next.js to GitHub Pages

on:
  push: { branches: [ main ] }
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci

      # Guard: show repo root & confirm script exists
      - name: Verify script path
        run: |
          echo "repo root:"
          ls -la
          echo "scripts/:"
          ls -la scripts || true

      # Debug env presence (won't print token)
      - name: Debug env
        run: |
          node -e "console.log('GH_USER =', process.env.GH_USER); console.log('GH_TOKEN set =', Boolean(process.env.GH_TOKEN));"
        env:
          GH_USER: Tridude5
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      # Who is this token?
      - name: Who am I? (viewer login)
        run: |
          curl -s -H "Authorization: bearer $GH_TOKEN" -H "Content-Type: application/json" \
            -d '{"query":"query{viewer{login}}"}' https://api.github.com/graphql
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      # Direct GraphQL sanity check for last 12 months
      - name: Direct GraphQL check (commit total, 12 mo)
        run: |
          node - <<'NODE'
          const to = new Date();
          const from = new Date(to); from.setFullYear(to.getFullYear() - 1);
          const body = {
            query: `
              query($login:String!,$from:DateTime!,$to:DateTime!){
                viewer{login}
                user(login:$login){
                  contributionsCollection(from:$from,to:$to,includePrivateContributions:true){
                    totalCommitContributions
                  }
                }
              }`,
            variables: { login: process.env.GH_USER, from: from.toISOString(), to: to.toISOString() }
          };
          fetch("https://api.github.com/graphql", {
            method:"POST",
            headers:{ "Content-Type":"application/json", Authorization:`bearer ${process.env.GH_TOKEN}` },
            body: JSON.stringify(body)
          }).then(r=>r.json()).then(j=>console.log(JSON.stringify(j,null,2))).catch(e=>console.error(e));
          NODE
        env:
          GH_USER: Tridude5
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      # Generate the JSON (make sure the path exists: scripts/fetch-contrib.mjs)
      - name: Fetch GitHub contributions
        run: node scripts/fetch-contrib.mjs
        env:
          GH_USER: Tridude5
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      # Show the generated file before build
      - name: Show contrib json (pre-build)
        run: |
          echo "public/github-contrib.json:" && cat public/github-contrib.json || true
          echo "----" && ls -la public || true

      - name: Build (static export)
        run: npm run build
        env:
          GH_USER: Tridude5
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      # Safety copy to ensure it lands in out/
      - name: Ensure contrib in export (safety copy)
        run: |
          mkdir -p out
          cp -f public/github-contrib.json out/github-contrib.json || true
          echo "---- out listing ----"
          ls -la out || true
          echo "out/github-contrib.json:" && cat out/github-contrib.json || true

      - uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
